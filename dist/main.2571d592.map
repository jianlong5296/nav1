{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAWC,EAAE,WAAF,CAAjB;AACA,IAAMC,UAAUF,UAAUG,IAAV,CAAe,SAAf,CAAhB;AACA,IAAMC,IAAGC,aAAaC,OAAb,CAAqB,GAArB,CAAT,EAAoC;AACpC,IAAMC,UAASC,KAAKC,KAAL,CAAWL,CAAX,CAAf,EAAoC;AACpC,IAAMM,UAAUH,WAAU,CAAU;AAChC,EAACI,MAAM,GAAP,EAAWC,KAAI,sCAAf,EADsB,EAEtB,EAACD,MAAM,GAAP,EAAWC,KAAI,qBAAf,EAFsB,EAGtB,EAACD,MAAM,GAAP,EAAWC,KAAI,wBAAf,EAHsB,EAItB,EAACD,MAAM,GAAP,EAAWC,KAAI,yBAAf,EAJsB,EAKtB,EAACD,MAAM,GAAP,EAAWC,KAAI,yBAAf,EALsB,CAA1B;AASA,IAAMC,cAAc,SAAdA,WAAc,CAACD,GAAD,EAAO;AAAa;AACpC,WAAOA,IAAIE,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,EACIA,OADJ,CACY,SADZ,EACuB,EADvB,EAEIA,OAFJ,CAEY,MAFZ,EAEoB,EAFpB,EAGIA,OAHJ,CAGY,MAHZ,EAGoB,EAHpB,CAAP,CADuB,CAIU;AACpC,CALD;AAMA,IAAMC,SAAS,SAATA,MAAS,GAAI;AACff,cAAWG,IAAX,CAAgB,eAAhB,EAAiCa,MAAjC;AACAN,YAAQO,OAAR,CAAgB,UAACC,IAAD,EAAMC,KAAN,EAAc;AAAU;AACpC,YAAMC,MAAKnB,uEAEaiB,KAAKP,IAFlB,8CAGaE,YAAYK,KAAKN,GAAjB,CAHb,gNAUHS,YAVG,CAUUnB,OAVV,CAAX;AAWJkB,YAAIE,EAAJ,CAAO,OAAP,EAAe,YAAI;AAAa;AAC5BC,mBAAOC,IAAP,CAAYN,KAAKN,GAAjB;AACH,SAFD;AAGAQ,YAAIE,EAAJ,CAAO,OAAP,EAAe,QAAf,EAAwB,UAACG,CAAD,EAAK;AACzBA,cAAEC,eAAF,GADyB,CACJ;AACrBhB,oBAAQiB,MAAR,CAAeR,KAAf,EAAqB,CAArB;AACAJ;AACC,SAJL;AAMC,KArBD;AAsBH,CAxBD;AAyBAA;;AAEAd,EAAE,YAAF,EACEqB,EADF,CACK,OADL,EACa,YAAI;AACd,QAAKV,MAAMW,OAAOK,MAAP,CAAc,cAAd,CAAX;AACA,QAAGhB,IAAIiB,OAAJ,CAAY,MAAZ,MAAsB,CAAzB,EAA2B;AACtBjB,cAAM,aAAYA,GAAlB;AACJ;AACAkB,YAAQC,GAAR,CAAYnB,GAAZ;AACAF,YAAQsB,IAAR,CAAa;AACTrB,cAAKE,YAAYD,GAAZ,EAAiB,CAAjB,EAAoBqB,WAApB,EADI,EACgC;AACzCrB,aAAIA;AAFK,KAAb,GAIAG,QAJA;AAKH,CAZD;;AAcAQ,OAAOW,cAAP,GAAwB,YAAI;AAAY;AACpCJ,YAAQC,GAAR,CAAY,QAAZ;AACA,QAAMI,SAAS3B,KAAK4B,SAAL,CAAe1B,OAAf,CAAf,CAFwB,CAEe;AACvCL,iBAAagC,OAAb,CAAqB,GAArB,EAAyBF,MAAzB;AACH,CAJD;;AAMA","file":"main.2571d592.map","sourceRoot":"..\\src","sourcesContent":["const $siteList =$('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst x =localStorage.getItem('x')  //尝试读取当前网站上的x\r\nconst xObject =JSON.parse(x)        //如果x能成功的变成一个对象\r\nconst hashMap = xObject ||[         //把这个对象放在hashMap里，如果不行，就初始化含2项的数组\r\n    {logo: 'D',url:'https://developer.mozilla.org/zh-CN/'},\r\n    {logo: 'J',url:'https://www.jd.com/'},\r\n    {logo: 'M',url:'https://music.163.com/'},\r\n    {logo: 'T',url:'https://www.taobao.com/'},\r\n    {logo: 'X',url:'https://xiedaimala.com/'}\r\n    \r\n\r\n]\r\nconst simplifyUrl = (url)=>{            //定义简化url函数\r\n    return url.replace('https://', '')\r\n              .replace('http://', '')\r\n              .replace('www.', '')\r\n              .replace(/\\/.*/, '')   //删除/开头的内容\r\n}\r\nconst render = ()=>{\r\n    $siteList. find('li:not(.last)').remove()\r\n    hashMap.forEach((node,index)=>{         /*index加完以后有个括号记得写*/\r\n        const $li =$(`<li>\r\n        <div class=\"site\">\r\n            <div class=\"logo\">${node.logo}</div>\r\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n            <div class=\"close\">         \r\n            <svg class=\"icon\">\r\n            <use xlink:href=\"#icon-close\"></use>\r\n            </svg>\r\n            </div>\r\n        </div>\r\n        </li>`).insertBefore($lastLi)\r\n    $li.on('click',()=>{            //代替a标签功能\r\n        window.open(node.url)\r\n    })\r\n    $li.on('click','.close',(e)=>{\r\n        e.stopPropagation()  //阻止冒泡\r\n        hashMap.splice(index,1)\r\n        render()\r\n        })\r\n\r\n    })\r\n}\r\nrender()\r\n\r\n$('.addButton')\r\n .on('click',()=>{\r\n   let  url = window.prompt('请问你要添加的网址是啥？')\r\n   if(url.indexOf('http')!==0){\r\n        url = 'https://'+ url\r\n   }\r\n    console.log(url)\r\n    hashMap.push({\r\n        logo:simplifyUrl(url)[0].toUpperCase(),  //直接调用简化url函数，再取大写\r\n        url:url\r\n    }),\r\n    render()\r\n})\r\n\r\nwindow.onbeforeunload = ()=>{           //关闭页面时会把当前的hashMap存到x里面，下次进入时会保存\r\n    console.log('页面要关闭了')\r\n    const string = JSON.stringify(hashMap) //把一个对象变成对象\r\n    localStorage.setItem('x',string)\r\n}\r\n\r\n/*$(document).on('keypress',(e) => {\r\n    const {key}= e          \r\n    for (let i = 0; i< hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }})*/\r\n"]}